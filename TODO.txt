** separate the methods (currently in AutoPatcher + TrackingPatchGui)

-----

*** Multiple calibrations (objective)

* Actually start patch is problematic: capa comp etc, not at the right moment
* pulses for R measurement should be small

* Write template matching error during calibration
* Paramecium tracking: autoexposure?
* Paramecium tracking: angle doesn't work
* it looks like photos are not stored during calibration
* Paramecium stuff: maybe all this automatically from tracking?
    1) Approach above coverslip
    2) Move right above
    3) Go down (slowly?)
    save floor Z

* Pressure wobble (see latest papers)
* Recalibrate only X axis (for angle change)
* Safe move: mvt in plane should also be safe, it's not
* Image analysis:
    take images of pipette at +-1 for each axis, including near the coverslip.

* Calibration in reference system
* Microscope stack: with slow move
* Crop around tip
* Locate pipette by movement
* Estimate motor ranges automatically
* Refactor calibration: Calibrator; calibrated_unit does not depend on camera
    => manipulator_unit could then absorb calibrated_unit
* Refactor calibration: Manipulation folder?
    => rewrite
* Should parameters be a dictionary instead?
* Should we move the pipette outside the autopatch algo?
* Refactor automatic patch: cut the run in pieces?

* Replace wait until still by wait until target reached (with deadline)
* In calibration: check whether best match is with the Z border (+- 8) => error

* Adjust speeds for horizontal moves
* Motor ranges using Home and Setting Home direction
* Maximization of calibration size
    (alternatively: abort when CalibrationError)
    check stage target position
* Possible optimization: instead of sleep before snap, do the template matching until stable results

** Automatically move and focus pipette when appearing on screen
    ideas: if tip on screen, look at how total intensity changes with focus
    In fact: move pipette up along X axis until there is no black on one border, or intensity
    disappears quickly. Then move up along Z axis until template matching works.

* DLL Path in multiclamp
* Resistance in status bar
* Safe move: add withdraw with correct direction
